// This code was autogenerated with `dbus-codegen-rust --file=specs/org.bluez.NetworkServer1.xml --interfaces=org.bluez.NetworkServer1 --client=nonblock --methodtype=none --prop-newtype`, see https://github.com/diwic/dbus-rs
#[allow(unused_imports)]
use dbus::arg;
use dbus::nonblock;

pub const ORG_BLUEZ_NETWORK_SERVER1_NAME: &str = "org.bluez.NetworkServer1";

pub trait OrgBluezNetworkServer1 {
    fn register(&self, uuid: &str, bridge: &str) -> nonblock::MethodReply<()>;
    fn unregister(&self, uuid: &str) -> nonblock::MethodReply<()>;
}

impl<'a, T: nonblock::NonblockReply, C: ::std::ops::Deref<Target = T>> OrgBluezNetworkServer1
    for nonblock::Proxy<'a, C>
{
    fn register(&self, uuid: &str, bridge: &str) -> nonblock::MethodReply<()> {
        self.method_call("org.bluez.NetworkServer1", "Register", (uuid, bridge))
    }

    fn unregister(&self, uuid: &str) -> nonblock::MethodReply<()> {
        self.method_call("org.bluez.NetworkServer1", "Unregister", (uuid,))
    }
}
