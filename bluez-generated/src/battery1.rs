// This code was autogenerated with `dbus-codegen-rust --file=specs/org.bluez.Battery1.xml --interfaces=org.bluez.Battery1 --client=nonblock --methodtype=none`, see https://github.com/diwic/dbus-rs
#[allow(unused_imports)]
use dbus::arg;
use dbus::nonblock;

pub trait OrgBluezBattery1 {
    fn percentage(&self) -> nonblock::MethodReply<u8>;
}

impl<'a, T: nonblock::NonblockReply, C: ::std::ops::Deref<Target = T>> OrgBluezBattery1
    for nonblock::Proxy<'a, C>
{
    fn percentage(&self) -> nonblock::MethodReply<u8> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(
            &self,
            "org.bluez.Battery1",
            "Percentage",
        )
    }
}

#[derive(Copy, Clone, Debug)]
pub struct OrgBluezBattery1Properties<'a>(
    pub &'a ::std::collections::HashMap<String, arg::Variant<Box<dyn arg::RefArg>>>,
);

impl<'a> OrgBluezBattery1Properties<'a> {
    pub const INTERFACE_NAME: &'static str = "org.bluez.Battery1";

    pub fn from_interfaces(
        interfaces: &'a ::std::collections::HashMap<
            String,
            ::std::collections::HashMap<String, arg::Variant<Box<dyn arg::RefArg>>>,
        >,
    ) -> Option<Self> {
        interfaces.get(Self::INTERFACE_NAME).map(Self)
    }

    pub fn percentage(&self) -> Option<u8> {
        arg::prop_cast(self.0, "Percentage").copied()
    }
}
